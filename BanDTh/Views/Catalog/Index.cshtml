@model BanDTh.ViewModels.PagedProductsVM
@{
    ViewData["Title"] = "Danh mục sản phẩm";
}
<div class="d-flex justify-content-between align-items-center mb-3">
    <h5 class="mb-0">@("Danh mục: " + (Model.Category ?? "Tất cả"))</h5>
    <form method="get" class="d-flex gap-2">
        <input type="hidden" name="category" value="@Model.Category" />
        <input class="form-control" type="search" name="q" value="@Model.Query" placeholder="Tìm kiếm..." />
        <select name="sort" class="form-select" onchange="this.form.submit()">
            <option value="popular" selected="@(Model.Sort == "popular")">Phổ biến</option>
            <option value="price_asc" selected="@(Model.Sort == "price_asc")">Giá tăng dần</option>
            <option value="price_desc" selected="@(Model.Sort == "price_desc")">Giá giảm dần</option>
        </select>
        <button class="btn btn-success" type="submit">Lọc</button>
    </form>
</div>
<div class="row row-cols-2 row-cols-md-4 g-3">
    @foreach (var p in Model.Items)
    {
        <div class="col">@await Html.PartialAsync("_ProductCard", p)</div>
    }
</div>
@if (Model.TotalPages > 1)
{
    <nav class="mt-4">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.Page ? "active" : "")">
                    <a class="page-link"
                        href="@Url.Action("Index", new { page = i, q = Model.Query, category = Model.Category, sort = Model.Sort })">@i</a>
                </li>
            }
        </ul>
    </nav>
}