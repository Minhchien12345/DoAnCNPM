// <auto-generated />
using System;
using BanDTh.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BanDTh.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BanDTh.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BrandId")
                        .HasName("PK__Brands__DAD4F05E343A70DA");

                    b.HasIndex(new[] { "Slug" }, "UQ__Brands__BC7B5FB6F349E3DE")
                        .IsUnique()
                        .HasFilter("[Slug] IS NOT NULL");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("BanDTh.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A0B8CDC340D");

                    b.HasIndex(new[] { "Slug" }, "UQ__Categori__BC7B5FB6AD26238E")
                        .IsUnique()
                        .HasFilter("[Slug] IS NOT NULL");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BanDTh.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Province")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64D8982A91BE");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BanDTh.Models.CustomerFeedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Customer__6A4BEDD6503CC0E5");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("CustomerFeedbacks");
                });

            modelBuilder.Entity("BanDTh.Models.DiscountCode", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DiscountType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Percent");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("MaxDiscount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("MinOrderValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Hoạt động");

                    b.HasKey("DiscountId")
                        .HasName("PK__Discount__E43F6D96AD5D626C");

                    b.HasIndex(new[] { "Code" }, "UQ__Discount__A25C5AA7874A4707")
                        .IsUnique();

                    b.ToTable("DiscountCodes");
                });

            modelBuilder.Entity("BanDTh.Models.EmployeeKpi", b =>
                {
                    b.Property<int>("Kpiid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KPIId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Kpiid"));

                    b.Property<decimal?>("Bonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CustomerCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<decimal?>("SatisfactionScore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("TotalOrders")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal?>("TotalRevenue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Kpiid")
                        .HasName("PK__Employee__72E692A1B9828887");

                    b.HasIndex("UserId");

                    b.ToTable("EmployeeKPI", (string)null);
                });

            modelBuilder.Entity("BanDTh.Models.InventoryStatistic", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityIn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("QuantityOut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("StockRemaining")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("InventoryId")
                        .HasName("PK__Inventor__F5FDE6B33113DF8E");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("InventoryStatistics");
                });

            modelBuilder.Entity("BanDTh.Models.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Slug")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("NewsId")
                        .HasName("PK__News__954EBDF3F45BE144");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex(new[] { "Slug" }, "UQ__News__BC7B5FB6BC948C25")
                        .IsUnique()
                        .HasFilter("[Slug] IS NOT NULL");

                    b.ToTable("News");
                });

            modelBuilder.Entity("BanDTh.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<bool?>("Instruction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OrderCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReceiverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReceiverPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("RewardPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ShippingMethod")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Chờ xử lý");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("TotalProducts")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BCFE7084B8D");

                    b.HasIndex("DiscountId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "OrderCode" }, "UQ__Orders__999B522918E167C6")
                        .IsUnique()
                        .HasFilter("[OrderCode] IS NOT NULL");

                    b.ToTable("Orders", t =>
                        {
                            t.HasTrigger("trg_UpdateStats_OnOrder");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("BanDTh.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<decimal?>("TotalPrice")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(29, 2)")
                        .HasComputedColumnSql("([Quantity]*[UnitPrice])", true);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("OrderDetailId")
                        .HasName("PK__OrderDet__D3B9D36C698855F3");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BanDTh.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("OldPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__B40CC6CD5A8F413B");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex(new[] { "Slug" }, "UQ__Products__BC7B5FB6F069568E")
                        .IsUnique()
                        .HasFilter("[Slug] IS NOT NULL");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BanDTh.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Percent");

                    b.Property<decimal?>("DiscountValue")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("PromotionId")
                        .HasName("PK__Promotio__52C42FCFF46FF448");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("BanDTh.Models.RepairAccessory", b =>
                {
                    b.Property<int>("RepairAccessoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepairAccessoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RepairAccessoryId")
                        .HasName("PK__RepairAc__4F0BBFFFCDD5E8D9");

                    b.ToTable("RepairAccessories");
                });

            modelBuilder.Entity("BanDTh.Models.RepairCategory", b =>
                {
                    b.Property<int>("RepairCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepairCategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RepairCategoryId")
                        .HasName("PK__RepairCa__4BCB294BC1045B89");

                    b.ToTable("RepairCategories");
                });

            modelBuilder.Entity("BanDTh.Models.RepairItem", b =>
                {
                    b.Property<int>("RepairItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepairItemId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("RepairAccessoryId")
                        .HasColumnType("int");

                    b.Property<int>("RepairCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("RepairName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("RepairItemId")
                        .HasName("PK__RepairIt__17083572E0695C2C");

                    b.HasIndex("ProductId");

                    b.HasIndex("RepairAccessoryId");

                    b.HasIndex("RepairCategoryId");

                    b.ToTable("RepairItems");
                });

            modelBuilder.Entity("BanDTh.Models.RewardHistory", b =>
                {
                    b.Property<int>("RewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RewardId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Earn");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RewardId")
                        .HasName("PK__RewardHi__825015B96B45853A");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("RewardHistories");
                });

            modelBuilder.Entity("BanDTh.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1A1F225FB0");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B6160995BEDB1")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BanDTh.Models.SalesStatistic", b =>
                {
                    b.Property<int>("StatisticId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatisticId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int?>("TotalOrders")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("TotalProducts")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal?>("TotalRevenue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("StatisticId")
                        .HasName("PK__SalesSta__367DEB17850E5E30");

                    b.HasIndex("UserId");

                    b.ToTable("SalesStatistics");
                });

            modelBuilder.Entity("BanDTh.Models.SystemLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LogId")
                        .HasName("PK__SystemLo__5E5486484909D4E5");

                    b.HasIndex("UserId");

                    b.ToTable("SystemLogs");
                });

            modelBuilder.Entity("BanDTh.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C08DA5B21");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "UserName" }, "UQ__Users__C9F28456109995C5")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProductPromotion", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "PromotionId")
                        .HasName("PK__ProductP__51208431CD18F1A1");

                    b.HasIndex("PromotionId");

                    b.ToTable("ProductPromotions", (string)null);
                });

            modelBuilder.Entity("BanDTh.Models.Customer", b =>
                {
                    b.HasOne("BanDTh.Models.User", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Customers__UserI__3DE82FB7");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BanDTh.Models.CustomerFeedback", b =>
                {
                    b.HasOne("BanDTh.Models.Order", "Order")
                        .WithMany("CustomerFeedbacks")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__CustomerF__Order__42ACE4D4");

                    b.HasOne("BanDTh.Models.User", "User")
                        .WithMany("CustomerFeedbacks")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__CustomerF__UserI__43A1090D");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BanDTh.Models.EmployeeKpi", b =>
                {
                    b.HasOne("BanDTh.Models.User", "User")
                        .WithMany("EmployeeKpis")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__EmployeeK__UserI__36470DEF");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BanDTh.Models.InventoryStatistic", b =>
                {
                    b.HasOne("BanDTh.Models.Product", "Product")
                        .WithMany("InventoryStatistics")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__Inventory__Produ__2CBDA3B5");

                    b.HasOne("BanDTh.Models.User", "User")
                        .WithMany("InventoryStatistics")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Inventory__UserI__2DB1C7EE");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BanDTh.Models.News", b =>
                {
                    b.HasOne("BanDTh.Models.User", "Author")
                        .WithMany("News")
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK__News__AuthorId__01D345B0");

                    b.HasOne("BanDTh.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("BanDTh.Models.Category", "Category")
                        .WithMany("News")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__News__CategoryId__02C769E9");

                    b.Navigation("Author");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BanDTh.Models.Order", b =>
                {
                    b.HasOne("BanDTh.Models.DiscountCode", "Discount")
                        .WithMany("Orders")
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("FK__Orders__Discount__4865BE2A");

                    b.HasOne("BanDTh.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__UserId__0B5CAFEA");

                    b.Navigation("Discount");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BanDTh.Models.OrderDetail", b =>
                {
                    b.HasOne("BanDTh.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Order__3A179ED3");

                    b.HasOne("BanDTh.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Produ__3B0BC30C");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BanDTh.Models.Product", b =>
                {
                    b.HasOne("BanDTh.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK__Products__BrandI__74794A92");

                    b.HasOne("BanDTh.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Products__Catego__73852659");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BanDTh.Models.RepairItem", b =>
                {
                    b.HasOne("BanDTh.Models.Product", "Product")
                        .WithMany("RepairItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__RepairIte__Produ__7B264821");

                    b.HasOne("BanDTh.Models.RepairAccessory", "RepairAccessory")
                        .WithMany("RepairItems")
                        .HasForeignKey("RepairAccessoryId")
                        .HasConstraintName("FK__RepairIte__Repai__7D0E9093");

                    b.HasOne("BanDTh.Models.RepairCategory", "RepairCategory")
                        .WithMany("RepairItems")
                        .HasForeignKey("RepairCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__RepairIte__Repai__7C1A6C5A");

                    b.Navigation("Product");

                    b.Navigation("RepairAccessory");

                    b.Navigation("RepairCategory");
                });

            modelBuilder.Entity("BanDTh.Models.RewardHistory", b =>
                {
                    b.HasOne("BanDTh.Models.Order", "Order")
                        .WithMany("RewardHistories")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__RewardHis__Order__1E6F845E");

                    b.HasOne("BanDTh.Models.User", "User")
                        .WithMany("RewardHistories")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__RewardHis__UserI__1D7B6025");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BanDTh.Models.SalesStatistic", b =>
                {
                    b.HasOne("BanDTh.Models.User", "User")
                        .WithMany("SalesStatistics")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__SalesStat__UserI__251C81ED");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BanDTh.Models.SystemLog", b =>
                {
                    b.HasOne("BanDTh.Models.User", "User")
                        .WithMany("SystemLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__SystemLog__UserI__477199F1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BanDTh.Models.User", b =>
                {
                    b.HasOne("BanDTh.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__RoleId__6AEFE058");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ProductPromotion", b =>
                {
                    b.HasOne("BanDTh.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductPr__Produ__17C286CF");

                    b.HasOne("BanDTh.Models.Promotion", null)
                        .WithMany()
                        .HasForeignKey("PromotionId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductPr__Promo__18B6AB08");
                });

            modelBuilder.Entity("BanDTh.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BanDTh.Models.Category", b =>
                {
                    b.Navigation("News");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("BanDTh.Models.DiscountCode", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BanDTh.Models.Order", b =>
                {
                    b.Navigation("CustomerFeedbacks");

                    b.Navigation("OrderDetails");

                    b.Navigation("RewardHistories");
                });

            modelBuilder.Entity("BanDTh.Models.Product", b =>
                {
                    b.Navigation("InventoryStatistics");

                    b.Navigation("OrderDetails");

                    b.Navigation("RepairItems");
                });

            modelBuilder.Entity("BanDTh.Models.RepairAccessory", b =>
                {
                    b.Navigation("RepairItems");
                });

            modelBuilder.Entity("BanDTh.Models.RepairCategory", b =>
                {
                    b.Navigation("RepairItems");
                });

            modelBuilder.Entity("BanDTh.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BanDTh.Models.User", b =>
                {
                    b.Navigation("CustomerFeedbacks");

                    b.Navigation("Customers");

                    b.Navigation("EmployeeKpis");

                    b.Navigation("InventoryStatistics");

                    b.Navigation("News");

                    b.Navigation("Orders");

                    b.Navigation("RewardHistories");

                    b.Navigation("SalesStatistics");

                    b.Navigation("SystemLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
